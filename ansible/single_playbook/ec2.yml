---

- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - variables.yml

  tasks:

    - name: Provisioning EC2 instance
      block:

        - name: Upload public key to AWS
          ec2_key:
            name: "{{ key_name }}"
            key_material: "{{ lookup('file', '~/.ssh/{{ key_name }}.pub') }}"

        - name: Create security group
          ec2_group:
            name: "{{ security_group }}"
            description: "Ansible SG"
            rules:
              - proto: tcp
                ports:
                  - 22
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all on ssh port, not recommended!
              - proto: tcp
                ports:
                  - 80
                cidr_ip: 0.0.0.0/0
                rule_desc: open port 80 to public for Nginx
            rules_egress:
              - proto: -1
                from_port: 0
                to_port: 0
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all outgoing traffic
            tags:
              tool: "{{ ansible_tag }}"
          register: security_group_ansible

        - name: Provision EC2 instance
          ec2_instance:
            key_name: "{{ key_name }}"
            security_group: "{{ security_group_ansible.group_id }}"
            image_id: "{{ image_id }}"
            instance_type: t2.micro
            name: "{{ ec2_name }}"
            tags:
              tool: "{{ ansible_tag }}"
          register: ec2

      tags: ['never', 'create_ec2'] # https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html

    - name: Dynmaic host for next play (Configure EC2)
      block:
        - name: EC2 info and filter for running ansible tag name
          ec2_instance_info:
            filters:
              "tag:Name": "{{ ec2_name }}"
              instance-state-name: running
          register: ansible_ec2

        - name: Get EC2 Public DNS with running state.
          add_host:
            name: "{{ item.public_dns_name }}"
            groups: nginx
          with_items: "{{ ansible_ec2.instances }}"

      tags: ['never', 'configure_ec2', 'app']

- hosts: nginx
  become: yes
  remote_user: ec2-user
  become_user: root
  become_method: sudo
  gather_facts: False
  vars_files:
    - variables.yml
  tasks:

    - name: Configure EC2
      block:

        - name: Update all packages
          yum:
            name: '*'
            state: latest
            update_only: yes

        - name: Install docker
          yum:
            name:
              - docker
            state: installed

        - name: docker-py
          pip:
            name: docker-py

        - name: Start docker service
          service:
            name: docker
            state: restarted

        - name: Create Ngnix container
          docker_container:
            name: "{{ container_name }}"
            image: "{{ image_name }}"
            state: started
            ports:
              - "{{ host_port }}:{{ container_port }}"

      tags: ['never', 'configure_ec2']

    - name: Re-Running app
      block:

        - name: Recreating Ngnix container
          docker_container:
            name: "{{ container_name }}"
            image: "{{ image_name }}"
            state: started
            ports:
              - "{{ host_port }}:{{ container_port }}"

        - name: Get infos on container
          docker_container_info:
            name: "{{ container_name }}"
          register: result

        - name: Does container exist?
          debug:
            msg: "The container {{ 'exists' if result.exists else 'does not exist' }}"

        - name: Print the status of the container
          debug:
            msg: "The container status is {{ result.container.State.Status | to_yaml }}"
          when: result.exists

      tags: ['never', 'app']
